{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavin\\\\Desktop\\\\AI-object identfy CCTV\\\\frontend\\\\src\\\\components\\\\LiveFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveFeed = () => {\n  _s();\n  const [isCellPhoneDetected, setIsCellPhoneDetected] = useState(false);\n  const [alarmMessage, setAlarmMessage] = useState('');\n  const [boundingBoxes, setBoundingBoxes] = useState([]);\n  const audioRef = useRef(new Audio('/alert.mp3')); // Use an alert sound file\n\n  useEffect(() => {\n    // Polling every 1 second to check if a cell phone is detected\n    const interval = setInterval(() => {\n      fetch('http://127.0.0.1:5000/cell_phone_status').then(response => response.json()).then(data => {\n        setIsCellPhoneDetected(data.cell_phone_detected);\n        setBoundingBoxes(data.bounding_boxes);\n\n        // Play the alert sound only when a cell phone is detected\n        if (data.cell_phone_detected) {\n          setAlarmMessage('ðŸš¨ Cell phone detected! ðŸš¨');\n          // Play sound alert only if cell phone is detected\n          audioRef.current.play();\n        } else {\n          setAlarmMessage('');\n        }\n      }).catch(err => console.error('Error fetching cell phone status', err));\n    }, 1000); // Poll every second\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Live Video Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"http://127.0.0.1:5000/video_feed\",\n      alt: \"Live feed\",\n      className: \"border border-gray-300 rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-red-600 font-bold text-xl\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: boundingBoxes.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute\",\n        style: {\n          top: `${box[1]}px`,\n          left: `${box[0]}px`,\n          width: `${box[2] - box[0]}px`,\n          height: `${box[3] - box[1]}px`,\n          border: box[4] === 'cell phone' ? '2px solid red' : '2px solid green'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveFeed, \"62d3sg6c1+OqGvpAUw+gzaVhCAk=\");\n_c = LiveFeed;\nexport default LiveFeed;\nvar _c;\n$RefreshReg$(_c, \"LiveFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LiveFeed","_s","isCellPhoneDetected","setIsCellPhoneDetected","alarmMessage","setAlarmMessage","boundingBoxes","setBoundingBoxes","audioRef","Audio","interval","setInterval","fetch","then","response","json","data","cell_phone_detected","bounding_boxes","current","play","catch","err","console","error","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","box","index","style","top","left","width","height","border","_c","$RefreshReg$"],"sources":["C:/Users/kavin/Desktop/AI-object identfy CCTV/frontend/src/components/LiveFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst LiveFeed = () => {\r\n  const [isCellPhoneDetected, setIsCellPhoneDetected] = useState(false);\r\n  const [alarmMessage, setAlarmMessage] = useState('');\r\n  const [boundingBoxes, setBoundingBoxes] = useState([]);\r\n  const audioRef = useRef(new Audio('/alert.mp3')); // Use an alert sound file\r\n\r\n  useEffect(() => {\r\n    // Polling every 1 second to check if a cell phone is detected\r\n    const interval = setInterval(() => {\r\n      fetch('http://127.0.0.1:5000/cell_phone_status')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setIsCellPhoneDetected(data.cell_phone_detected);\r\n          setBoundingBoxes(data.bounding_boxes);\r\n\r\n          // Play the alert sound only when a cell phone is detected\r\n          if (data.cell_phone_detected) {\r\n            setAlarmMessage('ðŸš¨ Cell phone detected! ðŸš¨');\r\n            // Play sound alert only if cell phone is detected\r\n            audioRef.current.play();\r\n          } else {\r\n            setAlarmMessage('');\r\n          }\r\n        })\r\n        .catch(err => console.error('Error fetching cell phone status', err));\r\n    }, 1000);  // Poll every second\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <h2 className=\"text-2xl mb-4\">Live Video Feed</h2>\r\n      <img\r\n        src=\"http://127.0.0.1:5000/video_feed\"\r\n        alt=\"Live feed\"\r\n        className=\"border border-gray-300 rounded-lg\"\r\n      />\r\n      \r\n      {/* Show alarm message if a cell phone is detected */}\r\n      {alarmMessage && (\r\n        <div className=\"mt-4 text-red-600 font-bold text-xl\">\r\n          {alarmMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* Render bounding boxes */}\r\n      <div className=\"mt-4\">\r\n        {boundingBoxes.map((box, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"absolute\"\r\n            style={{\r\n              top: `${box[1]}px`,\r\n              left: `${box[0]}px`,\r\n              width: `${box[2] - box[0]}px`,\r\n              height: `${box[3] - box[1]}px`,\r\n              border: box[4] === 'cell phone' ? '2px solid red' : '2px solid green',\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}