{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavin\\\\Documents\\\\GitHub\\\\AI-Checking-CCTV\\\\frontend\\\\src\\\\components\\\\LiveFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveFeed = () => {\n  _s();\n  const [detections, setDetections] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch('http://127.0.0.1:5000/detection_status').then(res => res.json()).then(data => {\n        setDetections(data.detections);\n\n        // Play sound if an object is detected\n        if (data.detections.length > 0) {\n          const latestDetection = data.detections[data.detections.length - 1];\n          if (latestDetection.object === \"gun\" || latestDetection.object === \"knife\") {\n            audioRef.current.play().catch(err => console.log(\"Error playing sound:\", err));\n          }\n        }\n      }).catch(err => console.error(err));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const toggleRecording = () => {\n    const endpoint = isRecording ? \"stop_recording\" : \"start_recording\";\n    fetch(`http://127.0.0.1:5000/${endpoint}`, {\n      method: \"POST\"\n    }).then(res => res.json()).then(() => setIsRecording(!isRecording));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Live Video Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"http://127.0.0.1:5000/video_feed\",\n      alt: \"Live Feed\",\n      className: \"w-full max-w-xl border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecording,\n      className: \"mt-4 p-2 bg-blue-600 text-white rounded\",\n      children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4\",\n      children: detections.map((det, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-red-500\",\n        children: [det.timestamp, \": \", det.object, \" detected!\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"/mixkit-classic-alarm-995.wav\",\n      preload: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveFeed, \"CYT+qKN3bFvySyw2AUbtrYEj6OE=\");\n_c = LiveFeed;\nexport default LiveFeed;\nvar _c;\n$RefreshReg$(_c, \"LiveFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LiveFeed","_s","detections","setDetections","isRecording","setIsRecording","audioRef","interval","setInterval","fetch","then","res","json","data","length","latestDetection","object","current","play","catch","err","console","log","error","clearInterval","toggleRecording","endpoint","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","map","det","index","timestamp","ref","preload","_c","$RefreshReg$"],"sources":["C:/Users/kavin/Documents/GitHub/AI-Checking-CCTV/frontend/src/components/LiveFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst LiveFeed = () => {\r\n  const [detections, setDetections] = useState([]);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetch('http://127.0.0.1:5000/detection_status')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setDetections(data.detections);\r\n          \r\n          // Play sound if an object is detected\r\n          if (data.detections.length > 0) {\r\n            const latestDetection = data.detections[data.detections.length - 1];\r\n            if (latestDetection.object === \"gun\" || latestDetection.object === \"knife\") {\r\n              audioRef.current.play().catch(err => console.log(\"Error playing sound:\", err));\r\n            }\r\n          }\r\n        })\r\n        .catch(err => console.error(err));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const toggleRecording = () => {\r\n    const endpoint = isRecording ? \"stop_recording\" : \"start_recording\";\r\n    fetch(`http://127.0.0.1:5000/${endpoint}`, { method: \"POST\" })\r\n      .then(res => res.json())\r\n      .then(() => setIsRecording(!isRecording));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 text-center\">\r\n      <h2 className=\"text-xl font-bold\">Live Video Feed</h2>\r\n      <img src=\"http://127.0.0.1:5000/video_feed\" alt=\"Live Feed\" className=\"w-full max-w-xl border rounded\" />\r\n\r\n      <button onClick={toggleRecording} className=\"mt-4 p-2 bg-blue-600 text-white rounded\">\r\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n      </button>\r\n\r\n      <ul className=\"mt-4\">\r\n        {detections.map((det, index) => (\r\n          <li key={index} className=\"text-red-500\">\r\n            {det.timestamp}: {det.object} detected!\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <audio ref={audioRef} src=\"/mixkit-classic-alarm-995.wav\" preload=\"auto\"></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}